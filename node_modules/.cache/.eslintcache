[{"C:\\Projects\\Phonebook\\src\\index.js":"1","C:\\Projects\\Phonebook\\src\\reportWebVitals.js":"2","C:\\Projects\\Phonebook\\src\\App.js":"3","C:\\Projects\\Phonebook\\src\\components\\redux\\store.js":"4","C:\\Projects\\Phonebook\\src\\components\\Form\\ContactsView\\Form.js":"5","C:\\Projects\\Phonebook\\src\\components\\redux\\auth\\auth-operations.js":"6","C:\\Projects\\Phonebook\\src\\components\\redux\\auth\\auth-slice.js":"7","C:\\Projects\\Phonebook\\src\\components\\redux\\contacts\\contactSlice.js":"8","C:\\Projects\\Phonebook\\src\\components\\Form\\ContactsView\\ContactList.js":"9","C:\\Projects\\Phonebook\\src\\components\\Form\\RegisterView.js":"10","C:\\Projects\\Phonebook\\src\\components\\Form\\LoginView.js":"11","C:\\Projects\\Phonebook\\src\\components\\Form\\HomePage.js":"12","C:\\Projects\\Phonebook\\src\\components\\Form\\PublicRoute.js":"13","C:\\Projects\\Phonebook\\src\\components\\Form\\NavBar.js":"14","C:\\Projects\\Phonebook\\src\\components\\Form\\PrivateRoute.js":"15","C:\\Projects\\Phonebook\\src\\components\\Form\\ContactsView\\PageContactsView.js":"16","C:\\Projects\\Phonebook\\src\\components\\Form\\ContactsView\\Filter.js":"17","C:\\Projects\\Phonebook\\src\\components\\redux\\auth\\auth-selector.js":"18","C:\\Projects\\Phonebook\\src\\components\\Form\\UserMenu.js":"19","C:\\Projects\\Phonebook\\src\\components\\Form\\DrawerComp.js":"20","C:\\Projects\\Phonebook\\src\\components\\Form\\Navigation.js":"21","C:\\Projects\\Phonebook\\src\\components\\Form\\AuthNav.js":"22","C:\\Projects\\Phonebook\\src\\components\\redux\\contacts\\contacts-operations.js":"23"},{"size":731,"mtime":1667935695230,"results":"24","hashOfConfig":"25"},{"size":362,"mtime":1667932333545,"results":"26","hashOfConfig":"25"},{"size":2352,"mtime":1668185200818,"results":"27","hashOfConfig":"25"},{"size":967,"mtime":1663958936561,"results":"28","hashOfConfig":"25"},{"size":2867,"mtime":1667934778266,"results":"29","hashOfConfig":"25"},{"size":1588,"mtime":1665500163996,"results":"30","hashOfConfig":"25"},{"size":1341,"mtime":1666962054529,"results":"31","hashOfConfig":"25"},{"size":851,"mtime":1665237807626,"results":"32","hashOfConfig":"25"},{"size":1992,"mtime":1668028892276,"results":"33","hashOfConfig":"25"},{"size":3372,"mtime":1667748593315,"results":"34","hashOfConfig":"25"},{"size":2791,"mtime":1667748704204,"results":"35","hashOfConfig":"25"},{"size":2016,"mtime":1668196703114,"results":"36","hashOfConfig":"25"},{"size":409,"mtime":1667934905227,"results":"37","hashOfConfig":"25"},{"size":3612,"mtime":1668195780922,"results":"38","hashOfConfig":"25"},{"size":329,"mtime":1667934891638,"results":"39","hashOfConfig":"25"},{"size":973,"mtime":1665237795283,"results":"40","hashOfConfig":"25"},{"size":848,"mtime":1667214748356,"results":"41","hashOfConfig":"25"},{"size":382,"mtime":1665750967449,"results":"42","hashOfConfig":"25"},{"size":996,"mtime":1667991292264,"results":"43","hashOfConfig":"25"},{"size":1383,"mtime":1666370450599,"results":"44","hashOfConfig":"25"},{"size":457,"mtime":1667934853716,"results":"45","hashOfConfig":"25"},{"size":222,"mtime":1665673707317,"results":"46","hashOfConfig":"25"},{"size":1404,"mtime":1665233715427,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},"1d8w2k",{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"51"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"51"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"51"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"51"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"51"},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},"C:\\Projects\\Phonebook\\src\\index.js",[],[],[],"C:\\Projects\\Phonebook\\src\\reportWebVitals.js",[],[],"C:\\Projects\\Phonebook\\src\\App.js",[],[],"C:\\Projects\\Phonebook\\src\\components\\redux\\store.js",[],[],"C:\\Projects\\Phonebook\\src\\components\\Form\\ContactsView\\Form.js",["124","125"],[],"import { TextField, Typography, Grid, Button } from \"@mui/material\";\r\nimport contactsOperatios from \"../../redux/auth/auth-operations\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n// import { RotatingLines } from 'react-loader-spinner';\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nexport default function Form() {\r\n  const dispatch = useDispatch();\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n  const [newContacts, setNewContacts] = useState({});\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    setNewContacts((prev) => ({ ...prev, [name]: value }));\r\n\r\n    switch (name) {\r\n      case \"name\":\r\n        setName(value);\r\n        break;\r\n      case \"number\":\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    dispatch(contactsOperatios.addContact(newContacts));\r\n\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Typography sx={{ marginBottom: 5 }} align=\"center\" variant=\"h5\">\r\n        You can add a new contact by filling out the form below\r\n      </Typography>\r\n      <form onSubmit={handleSubmit}>\r\n        <Grid align=\"center\">\r\n          <TextField\r\n            size=\"small\"\r\n            name=\"name\"\r\n            type=\"text\"\r\n            inputProps={{\r\n              pattern: \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\",\r\n            }}\r\n            label=\"Name\"\r\n            id=\"name\"\r\n            onChange={handleChange}\r\n            value={name}\r\n          />\r\n          <TextField\r\n            name=\"number\"\r\n            type=\"number\"\r\n            size=\"small\"\r\n            inputProps={{\r\n              inputMode: \"numeric\",\r\n              pattern: \"+?d{1,4}?[-.s]?(?d{1,3}?)?[-.s]?d{1,4}[-.s]?d{1,4}[-.s]?d{1,9}\",\r\n            }}\r\n            label=\"Number\"\r\n            id=\"number\"\r\n            onChange={handleChange}\r\n            value={number}\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            sx={{\r\n              marginLeft: \"20px\",\r\n              backgroundColor: \"#e0e0bc\",\r\n              color: \"black\",\r\n              \"&:hover\": {\r\n                backgroundColor: \"#e3e2e2\",\r\n                color: \"black\",\r\n              },\r\n            }}\r\n          >\r\n            Add contact\r\n          </Button>\r\n        </Grid>\r\n        {/* {isLoading && (\r\n          <RotatingLines\r\n            height=\"30\"\r\n            width=\"30\"\r\n            radius=\"10\"\r\n            color=\"green\"\r\n            ariaLabel=\"three-dots-loading\"\r\n            wrapperStyle\r\n            wrapperClass\r\n          />\r\n        )} */}\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Projects\\Phonebook\\src\\components\\redux\\auth\\auth-operations.js",[],[],"C:\\Projects\\Phonebook\\src\\components\\redux\\auth\\auth-slice.js",[],[],"C:\\Projects\\Phonebook\\src\\components\\redux\\contacts\\contactSlice.js",["126"],[],"import { createSlice, current } from '@reduxjs/toolkit';\r\n// import contactsOperatios from './contacts-operations';\r\n\r\nconst initialState = {\r\n  contacts: [],\r\n};\r\n\r\nconst contactSlice = createSlice({\r\n  name: 'contacts',\r\n  initialState,\r\n  reducers: {\r\n    removeContact(state, action) {\r\n      state.contacts = state.contacts.filter(({ id }) => id !== action.payload);\r\n      // почитай про иммутабельность\r\n    },\r\n    setContacts(state, action) {\r\n      state.contacts = action.payload;\r\n    },\r\n    pushContact(state, action) {\r\n      console.log('### state: ', state);\r\n      console.log('payload', action.payload);\r\n      state.contacts = [...state.contacts, action.payload];\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setContacts, removeContact, pushContact } = contactSlice.actions;\r\nexport default contactSlice.reducer;\r\n","C:\\Projects\\Phonebook\\src\\components\\Form\\ContactsView\\ContactList.js",[],[],"C:\\Projects\\Phonebook\\src\\components\\Form\\RegisterView.js",["127"],[],"import { useState, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport authOperation from '../redux/auth/auth-operations';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport { Box, Button, Grid, Paper, TextField, Typography } from '@mui/material';\r\nimport PersonAddIcon from '@mui/icons-material/PersonAdd';\r\n// import contactsOperatios from 'components/redux/contacts/contacts-operations';\r\n\r\nexport default function RegisterView() {\r\n  const dispatch = useDispatch();\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const paperStyle = { padding: '30px 20px', width: 400, margin: '40px auto' };\r\n  const headerStyle = { margin: 0 };\r\n  const avatarStyle = { backgroundColor: '#427AA1' };\r\n  const textField = { margin: '10px 0' };\r\n  const boxButton = { display: 'flex' };\r\n\r\n  // const handleChange = ({ target: { name, value } }) => {\r\n  //   switch (name) {\r\n  //     case 'name':\r\n  //       return setName(value);\r\n  //     case 'email':\r\n  //       return setEmail(value);\r\n  //     case 'password':\r\n  //       return setPassword(value);\r\n  //     default:\r\n  //       return;\r\n  //   }\r\n  // };\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    dispatch(authOperation.register({ name, email, password }));\r\n    setName('');\r\n    setEmail('');\r\n    setPassword('');\r\n    console.log(e);\r\n  };\r\n\r\n  return (\r\n    <Grid>\r\n      <Paper elevation={20} style={paperStyle}>\r\n        <Grid align=\"center\">\r\n          <Avatar style={avatarStyle}>\r\n            <PersonAddIcon />\r\n          </Avatar>\r\n          <h2 style={headerStyle}>Sign Up</h2>\r\n          <Typography variant=\"caption\" gutterBottom>\r\n            Please fill this form to create an account !\r\n          </Typography>\r\n        </Grid>\r\n        <form onSubmit={handleSubmit}>\r\n          <TextField\r\n            type=\"text\"\r\n            style={textField}\r\n            fullWidth\r\n            label=\"Name\"\r\n            id=\"name\"\r\n            placeholder=\"Enter your name\"\r\n            value={name}\r\n            onChange={e => {\r\n              setName(e.target.value);\r\n            }}\r\n          />\r\n          <TextField\r\n            type=\"email\"\r\n            style={textField}\r\n            fullWidth\r\n            label=\"Email\"\r\n            id=\"email\"\r\n            placeholder=\"Enter your email\"\r\n            value={email}\r\n            onChange={e => {\r\n              setEmail(e.target.value);\r\n            }}\r\n          />\r\n          <TextField\r\n            type=\"password\"\r\n            style={textField}\r\n            fullWidth\r\n            label=\"Password\"\r\n            id=\"password\"\r\n            placeholder=\"Enter your password\"\r\n            value={password}\r\n            onChange={e => {\r\n              setPassword(e.target.value);\r\n            }}\r\n          />\r\n          <Box style={boxButton} justifyContent=\"center\" alignItems=\"center\">\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              sx={{\r\n                backgroundColor: '#427AA1',\r\n                '&:hover': {\r\n                  backgroundColor: '#EBF2FA',\r\n                  color: 'black',\r\n                },\r\n              }}\r\n            >\r\n              Sign up\r\n            </Button>\r\n          </Box>\r\n        </form>\r\n      </Paper>\r\n    </Grid>\r\n  );\r\n}\r\n","C:\\Projects\\Phonebook\\src\\components\\Form\\LoginView.js",["128"],[],"import {\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  Grid,\r\n  Paper,\r\n  TextField,\r\n  Typography,\r\n} from '@mui/material';\r\nimport { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport authOperation from '../redux/auth/auth-operations';\r\nimport PersonPinIcon from '@mui/icons-material/PersonPin';\r\n\r\nexport default function LoginView() {\r\n  const dispatch = useDispatch();\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const paperStyle = { padding: '30px 20px', width: 400, margin: '40px auto' };\r\n  const headerStyle = { margin: 0 };\r\n  const avatarStyle = { backgroundColor: '#427AA1' };\r\n  const textField = { margin: '10px 0' };\r\n  const boxButton = { display: 'flex' };\r\n\r\n  const handleChange = ({ target: { name, value } }) => {\r\n    switch (name) {\r\n      case 'email':\r\n        return setEmail(value);\r\n      case 'password':\r\n        return setPassword(value);\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    dispatch(authOperation.login({ email, password }));\r\n    setEmail('');\r\n    setPassword('');\r\n    console.log(e);\r\n  };\r\n  return (\r\n    <Grid>\r\n      <Paper elevation={20} style={paperStyle}>\r\n        <Grid align=\"center\">\r\n          <Avatar style={avatarStyle}>\r\n            <PersonPinIcon />\r\n          </Avatar>\r\n          <h2 style={headerStyle}>Sign In</h2>\r\n          <Typography variant=\"caption\" gutterBottom>\r\n            Please fill this form to LogIn in your account !\r\n          </Typography>\r\n        </Grid>\r\n        <form onSubmit={handleSubmit}>\r\n          <TextField\r\n            type=\"email\"\r\n            style={textField}\r\n            fullWidth\r\n            label=\"Email\"\r\n            id=\"email\"\r\n            placeholder=\"Enter your email\"\r\n            value={email}\r\n            onChange={e => {\r\n              setEmail(e.target.value);\r\n            }}\r\n          />\r\n          <TextField\r\n            type=\"password\"\r\n            style={textField}\r\n            fullWidth\r\n            label=\"Password\"\r\n            id=\"password\"\r\n            placeholder=\"Enter your password\"\r\n            value={password}\r\n            onChange={e => {\r\n              setPassword(e.target.value);\r\n            }}\r\n          />\r\n          <Box style={boxButton} justifyContent=\"center\" alignItems=\"center\">\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              sx={{\r\n                backgroundColor: '#427AA1',\r\n                '&:hover': {\r\n                  backgroundColor: '#EBF2FA',\r\n                  color: 'black',\r\n                },\r\n              }}\r\n            >\r\n              Sign up\r\n            </Button>\r\n          </Box>\r\n        </form>\r\n      </Paper>\r\n    </Grid>\r\n  );\r\n}\r\n","C:\\Projects\\Phonebook\\src\\components\\Form\\HomePage.js",[],[],"C:\\Projects\\Phonebook\\src\\components\\Form\\PublicRoute.js",[],[],"C:\\Projects\\Phonebook\\src\\components\\Form\\NavBar.js",[],[],[],"C:\\Projects\\Phonebook\\src\\components\\Form\\PrivateRoute.js",[],[],"C:\\Projects\\Phonebook\\src\\components\\Form\\ContactsView\\PageContactsView.js",[],[],"C:\\Projects\\Phonebook\\src\\components\\Form\\ContactsView\\Filter.js",[],[],"C:\\Projects\\Phonebook\\src\\components\\redux\\auth\\auth-selector.js",[],[],"C:\\Projects\\Phonebook\\src\\components\\Form\\UserMenu.js",["129"],[],"import { useDispatch, useSelector } from \"react-redux\";\r\nimport authSelectors from \"../redux/auth/auth-selector\";\r\nimport authOperation from \"../redux/auth/auth-operations\";\r\nimport s from \"./AppBar.module.css\";\r\nimport { Button, Typography, Grid } from \"@mui/material\";\r\n\r\nexport default function UserMenu() {\r\n  const dispatch = useDispatch();\r\n  const name = useSelector(authSelectors.getUserName);\r\n  return (\r\n    <>\r\n      <Typography color=\"black\">Hello, {name}</Typography>\r\n      <Grid item xs={3} sx={{ marginRight: 12 }}>\r\n        <Button\r\n          type=\"submit\"\r\n          variant=\"contained\"\r\n          onClick={() => dispatch(authOperation.logOut())}\r\n          sx={{\r\n            marginLeft: \"auto\",\r\n            backgroundColor: \"white\",\r\n            color: \"black\",\r\n            \"&:hover\": {\r\n              backgroundColor: \"#e3e2e2\",\r\n              color: \"black\",\r\n            },\r\n          }}\r\n        >\r\n          LogOut\r\n        </Button>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n","C:\\Projects\\Phonebook\\src\\components\\Form\\DrawerComp.js",[],[],"C:\\Projects\\Phonebook\\src\\components\\Form\\Navigation.js",[],[],"C:\\Projects\\Phonebook\\src\\components\\Form\\AuthNav.js",[],[],"C:\\Projects\\Phonebook\\src\\components\\redux\\contacts\\contacts-operations.js",[],[],{"ruleId":"130","severity":1,"message":"131","line":3,"column":20,"nodeType":"132","messageId":"133","endLine":3,"endColumn":29},{"ruleId":"130","severity":1,"message":"134","line":4,"column":10,"nodeType":"132","messageId":"133","endLine":4,"endColumn":21},{"ruleId":"130","severity":1,"message":"135","line":1,"column":23,"nodeType":"132","messageId":"133","endLine":1,"endColumn":30},{"ruleId":"130","severity":1,"message":"131","line":1,"column":20,"nodeType":"132","messageId":"133","endLine":1,"endColumn":29},{"ruleId":"130","severity":1,"message":"136","line":26,"column":9,"nodeType":"132","messageId":"133","endLine":26,"endColumn":21},{"ruleId":"130","severity":1,"message":"137","line":4,"column":8,"nodeType":"132","messageId":"133","endLine":4,"endColumn":9},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useSelector' is defined but never used.","'current' is defined but never used.","'handleChange' is assigned a value but never used.","'s' is defined but never used."]