[{"C:\\Projects\\Phonebook\\src\\index.js":"1","C:\\Projects\\Phonebook\\src\\reportWebVitals.js":"2","C:\\Projects\\Phonebook\\src\\App.js":"3","C:\\Projects\\Phonebook\\src\\components\\redux\\store.js":"4","C:\\Projects\\Phonebook\\src\\components\\Form\\ContactsView\\Form.js":"5","C:\\Projects\\Phonebook\\src\\components\\redux\\auth\\auth-operations.js":"6","C:\\Projects\\Phonebook\\src\\components\\redux\\auth\\auth-slice.js":"7","C:\\Projects\\Phonebook\\src\\components\\redux\\contacts\\contactSlice.js":"8","C:\\Projects\\Phonebook\\src\\components\\Form\\ContactsView\\ContactList.js":"9","C:\\Projects\\Phonebook\\src\\components\\Form\\RegisterView.js":"10","C:\\Projects\\Phonebook\\src\\components\\Form\\LoginView.js":"11","C:\\Projects\\Phonebook\\src\\components\\Form\\HomePage.js":"12","C:\\Projects\\Phonebook\\src\\components\\Form\\PublicRoute.js":"13","C:\\Projects\\Phonebook\\src\\components\\Form\\NavBar.js":"14","C:\\Projects\\Phonebook\\src\\components\\Form\\PrivateRoute.js":"15","C:\\Projects\\Phonebook\\src\\components\\Form\\ContactsView\\PageContactsView.js":"16","C:\\Projects\\Phonebook\\src\\components\\Form\\ContactsView\\Filter.js":"17","C:\\Projects\\Phonebook\\src\\components\\redux\\auth\\auth-selector.js":"18","C:\\Projects\\Phonebook\\src\\components\\Form\\UserMenu.js":"19","C:\\Projects\\Phonebook\\src\\components\\Form\\DrawerComp.js":"20","C:\\Projects\\Phonebook\\src\\components\\Form\\Navigation.js":"21","C:\\Projects\\Phonebook\\src\\components\\Form\\AuthNav.js":"22","C:\\Projects\\Phonebook\\src\\components\\redux\\contacts\\contacts-operations.js":"23"},{"size":731,"mtime":1667935695230,"results":"24","hashOfConfig":"25"},{"size":362,"mtime":1667932333545,"results":"26","hashOfConfig":"25"},{"size":2529,"mtime":1667935613457,"results":"27","hashOfConfig":"25"},{"size":967,"mtime":1663958936561,"results":"28","hashOfConfig":"25"},{"size":2867,"mtime":1667934778266,"results":"29","hashOfConfig":"25"},{"size":1588,"mtime":1665500163996,"results":"30","hashOfConfig":"25"},{"size":1341,"mtime":1666962054529,"results":"31","hashOfConfig":"25"},{"size":851,"mtime":1665237807626,"results":"32","hashOfConfig":"25"},{"size":1992,"mtime":1668028892276,"results":"33","hashOfConfig":"25"},{"size":3372,"mtime":1667748593315,"results":"34","hashOfConfig":"25"},{"size":2791,"mtime":1667748704204,"results":"35","hashOfConfig":"25"},{"size":1213,"mtime":1667856265163,"results":"36","hashOfConfig":"25"},{"size":409,"mtime":1667934905227,"results":"37","hashOfConfig":"25"},{"size":3898,"mtime":1667748228182,"results":"38","hashOfConfig":"25"},{"size":329,"mtime":1667934891638,"results":"39","hashOfConfig":"25"},{"size":973,"mtime":1665237795283,"results":"40","hashOfConfig":"25"},{"size":848,"mtime":1667214748356,"results":"41","hashOfConfig":"25"},{"size":382,"mtime":1665750967449,"results":"42","hashOfConfig":"25"},{"size":996,"mtime":1667991292264,"results":"43","hashOfConfig":"25"},{"size":1383,"mtime":1666370450599,"results":"44","hashOfConfig":"25"},{"size":457,"mtime":1667934853716,"results":"45","hashOfConfig":"25"},{"size":222,"mtime":1665673707317,"results":"46","hashOfConfig":"25"},{"size":1404,"mtime":1665233715427,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},"1d8w2k",{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"51"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"51"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"51"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"51"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"51"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"51"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"51"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"51"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Projects\\Phonebook\\src\\index.js",[],[],[],"C:\\Projects\\Phonebook\\src\\reportWebVitals.js",[],[],"C:\\Projects\\Phonebook\\src\\App.js",["126","127","128","129","130"],[],"import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport Form from \"./components/Form/ContactsView/Form\";\nimport ContactList from \"./components/Form/ContactsView/ContactList\";\nimport s from \"./components/Form/Main.module.css\";\nimport Filter from \"./components/Form/ContactsView/Filter\";\nimport { Route, Routes } from \"react-router-dom\";\nimport RegisterView from \"./components/Form/RegisterView\";\nimport LoginView from \"./components/Form/LoginView\";\nimport NavBar from \"./components/Form/NavBar\";\nimport PageContactsView from \"./components/Form/ContactsView/PageContactsView\";\nimport authOperation from \"./components/redux/auth/auth-operations\";\nimport { Provider } from \"react-redux\";\nimport { store, persistor } from \"./components/redux/store\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport authSelectors from \"./components/redux/auth/auth-selector\";\nimport HomePage from \"./components/Form/HomePage\";\nimport PublicRoute from \"./components/Form/PublicRoute\";\nimport PrivateRoute from \"./components/Form/PrivateRoute\";\nimport { createTheme, ThemeProvider } from \"@mui/material\";\n\nexport default function App() {\n  const theme = createTheme({\n    typography: {\n      fontFamily: [\"Raleway\", \"sans - serif\"].join(\",\"),\n    },\n  });\n  const dispatch = useDispatch();\n  const token = useSelector(authSelectors.getUserToken);\n  const isFetchingCurrentUser = useSelector(authSelectors.getIsFetchingCurrentUser);\n  useEffect(() => {\n    if (token) {\n      dispatch(authOperation.fetchCurrentUser());\n    }\n  }, []);\n  return (\n    !isFetchingCurrentUser && (\n      <ThemeProvider theme={theme}>\n        <div>\n          <NavBar />\n          <main className={s.main_wrapper}>\n            <Provider store={store}>\n              <PersistGate loading={null} persistor={persistor}>\n                <Routes>\n                  <Route path=\"/\" element={<HomePage />}></Route>\n                  <Route element={<PublicRoute />}>\n                    <Route path=\"/register\" element={<RegisterView />} restricted></Route>\n                    <Route path=\"/login\" element={<LoginView />} restricted></Route>\n                  </Route>\n                  <Route element={<PrivateRoute />}>\n                    <Route path=\"/contacts\" element={<PageContactsView />}></Route>\n                  </Route>\n                </Routes>\n              </PersistGate>\n            </Provider>\n          </main>\n        </div>\n      </ThemeProvider>\n    )\n  );\n}\n","C:\\Projects\\Phonebook\\src\\components\\redux\\store.js",[],[],"C:\\Projects\\Phonebook\\src\\components\\Form\\ContactsView\\Form.js",["131","132"],[],"import { TextField, Typography, Grid, Button } from \"@mui/material\";\r\nimport contactsOperatios from \"../../redux/auth/auth-operations\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n// import { RotatingLines } from 'react-loader-spinner';\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nexport default function Form() {\r\n  const dispatch = useDispatch();\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n  const [newContacts, setNewContacts] = useState({});\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    setNewContacts((prev) => ({ ...prev, [name]: value }));\r\n\r\n    switch (name) {\r\n      case \"name\":\r\n        setName(value);\r\n        break;\r\n      case \"number\":\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    dispatch(contactsOperatios.addContact(newContacts));\r\n\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Typography sx={{ marginBottom: 5 }} align=\"center\" variant=\"h5\">\r\n        You can add a new contact by filling out the form below\r\n      </Typography>\r\n      <form onSubmit={handleSubmit}>\r\n        <Grid align=\"center\">\r\n          <TextField\r\n            size=\"small\"\r\n            name=\"name\"\r\n            type=\"text\"\r\n            inputProps={{\r\n              pattern: \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\",\r\n            }}\r\n            label=\"Name\"\r\n            id=\"name\"\r\n            onChange={handleChange}\r\n            value={name}\r\n          />\r\n          <TextField\r\n            name=\"number\"\r\n            type=\"number\"\r\n            size=\"small\"\r\n            inputProps={{\r\n              inputMode: \"numeric\",\r\n              pattern: \"+?d{1,4}?[-.s]?(?d{1,3}?)?[-.s]?d{1,4}[-.s]?d{1,4}[-.s]?d{1,9}\",\r\n            }}\r\n            label=\"Number\"\r\n            id=\"number\"\r\n            onChange={handleChange}\r\n            value={number}\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            sx={{\r\n              marginLeft: \"20px\",\r\n              backgroundColor: \"#e0e0bc\",\r\n              color: \"black\",\r\n              \"&:hover\": {\r\n                backgroundColor: \"#e3e2e2\",\r\n                color: \"black\",\r\n              },\r\n            }}\r\n          >\r\n            Add contact\r\n          </Button>\r\n        </Grid>\r\n        {/* {isLoading && (\r\n          <RotatingLines\r\n            height=\"30\"\r\n            width=\"30\"\r\n            radius=\"10\"\r\n            color=\"green\"\r\n            ariaLabel=\"three-dots-loading\"\r\n            wrapperStyle\r\n            wrapperClass\r\n          />\r\n        )} */}\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Projects\\Phonebook\\src\\components\\redux\\auth\\auth-operations.js",[],[],"C:\\Projects\\Phonebook\\src\\components\\redux\\auth\\auth-slice.js",[],[],"C:\\Projects\\Phonebook\\src\\components\\redux\\contacts\\contactSlice.js",["133"],[],"import { createSlice, current } from '@reduxjs/toolkit';\r\n// import contactsOperatios from './contacts-operations';\r\n\r\nconst initialState = {\r\n  contacts: [],\r\n};\r\n\r\nconst contactSlice = createSlice({\r\n  name: 'contacts',\r\n  initialState,\r\n  reducers: {\r\n    removeContact(state, action) {\r\n      state.contacts = state.contacts.filter(({ id }) => id !== action.payload);\r\n      // почитай про иммутабельность\r\n    },\r\n    setContacts(state, action) {\r\n      state.contacts = action.payload;\r\n    },\r\n    pushContact(state, action) {\r\n      console.log('### state: ', state);\r\n      console.log('payload', action.payload);\r\n      state.contacts = [...state.contacts, action.payload];\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setContacts, removeContact, pushContact } = contactSlice.actions;\r\nexport default contactSlice.reducer;\r\n","C:\\Projects\\Phonebook\\src\\components\\Form\\ContactsView\\ContactList.js",[],[],"C:\\Projects\\Phonebook\\src\\components\\Form\\RegisterView.js",["134"],[],"import { useState, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport authOperation from '../redux/auth/auth-operations';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport { Box, Button, Grid, Paper, TextField, Typography } from '@mui/material';\r\nimport PersonAddIcon from '@mui/icons-material/PersonAdd';\r\n// import contactsOperatios from 'components/redux/contacts/contacts-operations';\r\n\r\nexport default function RegisterView() {\r\n  const dispatch = useDispatch();\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const paperStyle = { padding: '30px 20px', width: 400, margin: '40px auto' };\r\n  const headerStyle = { margin: 0 };\r\n  const avatarStyle = { backgroundColor: '#427AA1' };\r\n  const textField = { margin: '10px 0' };\r\n  const boxButton = { display: 'flex' };\r\n\r\n  // const handleChange = ({ target: { name, value } }) => {\r\n  //   switch (name) {\r\n  //     case 'name':\r\n  //       return setName(value);\r\n  //     case 'email':\r\n  //       return setEmail(value);\r\n  //     case 'password':\r\n  //       return setPassword(value);\r\n  //     default:\r\n  //       return;\r\n  //   }\r\n  // };\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    dispatch(authOperation.register({ name, email, password }));\r\n    setName('');\r\n    setEmail('');\r\n    setPassword('');\r\n    console.log(e);\r\n  };\r\n\r\n  return (\r\n    <Grid>\r\n      <Paper elevation={20} style={paperStyle}>\r\n        <Grid align=\"center\">\r\n          <Avatar style={avatarStyle}>\r\n            <PersonAddIcon />\r\n          </Avatar>\r\n          <h2 style={headerStyle}>Sign Up</h2>\r\n          <Typography variant=\"caption\" gutterBottom>\r\n            Please fill this form to create an account !\r\n          </Typography>\r\n        </Grid>\r\n        <form onSubmit={handleSubmit}>\r\n          <TextField\r\n            type=\"text\"\r\n            style={textField}\r\n            fullWidth\r\n            label=\"Name\"\r\n            id=\"name\"\r\n            placeholder=\"Enter your name\"\r\n            value={name}\r\n            onChange={e => {\r\n              setName(e.target.value);\r\n            }}\r\n          />\r\n          <TextField\r\n            type=\"email\"\r\n            style={textField}\r\n            fullWidth\r\n            label=\"Email\"\r\n            id=\"email\"\r\n            placeholder=\"Enter your email\"\r\n            value={email}\r\n            onChange={e => {\r\n              setEmail(e.target.value);\r\n            }}\r\n          />\r\n          <TextField\r\n            type=\"password\"\r\n            style={textField}\r\n            fullWidth\r\n            label=\"Password\"\r\n            id=\"password\"\r\n            placeholder=\"Enter your password\"\r\n            value={password}\r\n            onChange={e => {\r\n              setPassword(e.target.value);\r\n            }}\r\n          />\r\n          <Box style={boxButton} justifyContent=\"center\" alignItems=\"center\">\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              sx={{\r\n                backgroundColor: '#427AA1',\r\n                '&:hover': {\r\n                  backgroundColor: '#EBF2FA',\r\n                  color: 'black',\r\n                },\r\n              }}\r\n            >\r\n              Sign up\r\n            </Button>\r\n          </Box>\r\n        </form>\r\n      </Paper>\r\n    </Grid>\r\n  );\r\n}\r\n","C:\\Projects\\Phonebook\\src\\components\\Form\\LoginView.js",["135"],[],"import {\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  Grid,\r\n  Paper,\r\n  TextField,\r\n  Typography,\r\n} from '@mui/material';\r\nimport { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport authOperation from '../redux/auth/auth-operations';\r\nimport PersonPinIcon from '@mui/icons-material/PersonPin';\r\n\r\nexport default function LoginView() {\r\n  const dispatch = useDispatch();\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const paperStyle = { padding: '30px 20px', width: 400, margin: '40px auto' };\r\n  const headerStyle = { margin: 0 };\r\n  const avatarStyle = { backgroundColor: '#427AA1' };\r\n  const textField = { margin: '10px 0' };\r\n  const boxButton = { display: 'flex' };\r\n\r\n  const handleChange = ({ target: { name, value } }) => {\r\n    switch (name) {\r\n      case 'email':\r\n        return setEmail(value);\r\n      case 'password':\r\n        return setPassword(value);\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    dispatch(authOperation.login({ email, password }));\r\n    setEmail('');\r\n    setPassword('');\r\n    console.log(e);\r\n  };\r\n  return (\r\n    <Grid>\r\n      <Paper elevation={20} style={paperStyle}>\r\n        <Grid align=\"center\">\r\n          <Avatar style={avatarStyle}>\r\n            <PersonPinIcon />\r\n          </Avatar>\r\n          <h2 style={headerStyle}>Sign In</h2>\r\n          <Typography variant=\"caption\" gutterBottom>\r\n            Please fill this form to LogIn in your account !\r\n          </Typography>\r\n        </Grid>\r\n        <form onSubmit={handleSubmit}>\r\n          <TextField\r\n            type=\"email\"\r\n            style={textField}\r\n            fullWidth\r\n            label=\"Email\"\r\n            id=\"email\"\r\n            placeholder=\"Enter your email\"\r\n            value={email}\r\n            onChange={e => {\r\n              setEmail(e.target.value);\r\n            }}\r\n          />\r\n          <TextField\r\n            type=\"password\"\r\n            style={textField}\r\n            fullWidth\r\n            label=\"Password\"\r\n            id=\"password\"\r\n            placeholder=\"Enter your password\"\r\n            value={password}\r\n            onChange={e => {\r\n              setPassword(e.target.value);\r\n            }}\r\n          />\r\n          <Box style={boxButton} justifyContent=\"center\" alignItems=\"center\">\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              sx={{\r\n                backgroundColor: '#427AA1',\r\n                '&:hover': {\r\n                  backgroundColor: '#EBF2FA',\r\n                  color: 'black',\r\n                },\r\n              }}\r\n            >\r\n              Sign up\r\n            </Button>\r\n          </Box>\r\n        </form>\r\n      </Paper>\r\n    </Grid>\r\n  );\r\n}\r\n","C:\\Projects\\Phonebook\\src\\components\\Form\\HomePage.js",["136"],[],"import { Typography, Grid } from '@mui/material';\r\nimport { motion } from 'framer-motion';\r\nimport { Box } from '@mui/system';\r\nimport Image from '../Form/Images/3.jpg';\r\nimport s from './AppBar.module.css';\r\n\r\nexport default function HomePage() {\r\n  const textAnimation = {\r\n    hidden: {\r\n      y: -100,\r\n      opacity: 0,\r\n    },\r\n    visible: custom => ({\r\n      y: 0,\r\n      opacity: 1,\r\n      transition: { delay: custom * 0.5 },\r\n    }),\r\n  };\r\n\r\n  return (\r\n    <motion.div initial=\"hidden\" whileInView=\"visible\">\r\n      <Box\r\n        sx={{\r\n          height: '100vh',\r\n          backgroundImage: `url(${Image})`,\r\n          backgroundRepeat: 'no-repeat',\r\n          backgroundSize: 'cover',\r\n          marginTop: 0,\r\n        }}\r\n      >\r\n        <Grid align=\"center\" sx={{ marginLeft: 20, marginRight: 20 }}>\r\n          <motion.h1 custom={1} variants={textAnimation} className={s.caption}>\r\n            Welcome to My{' '}\r\n            <motion.span\r\n              custom={2}\r\n              variants={textAnimation}\r\n              className={s.colorTitle}\r\n            >\r\n              Project\r\n            </motion.span>\r\n          </motion.h1>\r\n        </Grid>\r\n      </Box>\r\n    </motion.div>\r\n  );\r\n}\r\n","C:\\Projects\\Phonebook\\src\\components\\Form\\PublicRoute.js",[],[],"C:\\Projects\\Phonebook\\src\\components\\Form\\NavBar.js",["137","138","139","140","141"],[],"import { useSelector } from 'react-redux';\r\nimport AuthNav from './AuthNav';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport s from './AppBar.module.css';\r\nimport Navigation from './Navigation';\r\nimport UserMenu from './UserMenu';\r\nimport authSelectors from '../redux/auth/auth-selector';\r\nimport { useState } from 'react';\r\nimport {\r\n  Grid,\r\n  Toolbar,\r\n  Typography,\r\n  // Tabs,\r\n  // Tab,\r\n  Box,\r\n  Button,\r\n  useMediaQuery,\r\n  useTheme,\r\n} from '@mui/material';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport DrawerComp from './DrawerComp';\r\nimport AccountCircleSharpIcon from '@mui/icons-material/AccountCircleSharp';\r\n// import NoAccountsSharpIcon from '@mui/icons-material/NoAccountsSharp';\r\n\r\nexport default function NavBar() {\r\n  const theme = useTheme();\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n  const isMatch = useMediaQuery(theme.breakpoints.down('md'));\r\n  const [value, setValue] = useState();\r\n  return (\r\n    <AppBar sx={{ backgroundColor: '#064789', position: 'absolute' }}>\r\n      <Toolbar>\r\n        {isMatch ? (\r\n          <>\r\n            <Typography>\r\n              <AccountCircleSharpIcon></AccountCircleSharpIcon>\r\n            </Typography>\r\n            <DrawerComp></DrawerComp>\r\n          </>\r\n        ) : (\r\n          <Grid container sx={{ placeItems: 'center' }}>\r\n            <Grid item xs={2}>\r\n              <Typography>\r\n                <AccountCircleSharpIcon></AccountCircleSharpIcon>\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <Button\r\n                component={Link}\r\n                to={'/'}\r\n                sx={{\r\n                  marginLeft: 'auto',\r\n                  backgroundColor: '#427AA1',\r\n                  color: '#EBF2FA',\r\n                  '&:hover': {\r\n                    backgroundColor: '#EBF2FA',\r\n                    color: 'black',\r\n                  },\r\n                }}\r\n                variant=\"contained\"\r\n              >\r\n                Home\r\n              </Button>\r\n              <Button\r\n                component={Link}\r\n                to={'/contacts'}\r\n                sx={{\r\n                  marginLeft: 1,\r\n                  backgroundColor: '#427AA1',\r\n                  color: '#EBF2FA',\r\n                  '&:hover': {\r\n                    backgroundColor: '#EBF2FA',\r\n                    color: 'black',\r\n                  },\r\n                }}\r\n                variant=\"contained\"\r\n              >\r\n                Contacts\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        )}\r\n        {isLoggedIn ? (\r\n          <UserMenu />\r\n        ) : (\r\n          <Grid item xs={3} sx={{ marginRight: 12 }}>\r\n            <Box display=\"flex\">\r\n              <Button\r\n                component={Link}\r\n                to={'/register'}\r\n                sx={{\r\n                  marginLeft: 'auto',\r\n                  backgroundColor: '#427AA1',\r\n                  color: '#EBF2FA',\r\n                  '&:hover': {\r\n                    backgroundColor: '#EBF2FA',\r\n                    color: 'black',\r\n                  },\r\n                }}\r\n                variant=\"contained\"\r\n              >\r\n                Register\r\n              </Button>\r\n              <Button\r\n                component={Link}\r\n                to={'/login'}\r\n                sx={{\r\n                  marginLeft: 1,\r\n                  backgroundColor: '#427AA1',\r\n                  color: '#EBF2FA',\r\n                  '&:hover': {\r\n                    backgroundColor: '#EBF2FA',\r\n                    color: 'black',\r\n                  },\r\n                }}\r\n                variant=\"contained\"\r\n              >\r\n                LogIn\r\n              </Button>\r\n            </Box>\r\n          </Grid>\r\n        )}\r\n      </Toolbar>\r\n    </AppBar>\r\n    // <header className={s.header}>\r\n    //   <Navigation />\r\n\r\n    // </header>\r\n  );\r\n}\r\n","C:\\Projects\\Phonebook\\src\\components\\Form\\PrivateRoute.js",[],[],"C:\\Projects\\Phonebook\\src\\components\\Form\\ContactsView\\PageContactsView.js",[],[],"C:\\Projects\\Phonebook\\src\\components\\Form\\ContactsView\\Filter.js",[],[],"C:\\Projects\\Phonebook\\src\\components\\redux\\auth\\auth-selector.js",[],[],"C:\\Projects\\Phonebook\\src\\components\\Form\\UserMenu.js",["142"],[],"import { useDispatch, useSelector } from \"react-redux\";\r\nimport authSelectors from \"../redux/auth/auth-selector\";\r\nimport authOperation from \"../redux/auth/auth-operations\";\r\nimport s from \"./AppBar.module.css\";\r\nimport { Button, Typography, Grid } from \"@mui/material\";\r\n\r\nexport default function UserMenu() {\r\n  const dispatch = useDispatch();\r\n  const name = useSelector(authSelectors.getUserName);\r\n  return (\r\n    <>\r\n      <Typography color=\"black\">Hello, {name}</Typography>\r\n      <Grid item xs={3} sx={{ marginRight: 12 }}>\r\n        <Button\r\n          type=\"submit\"\r\n          variant=\"contained\"\r\n          onClick={() => dispatch(authOperation.logOut())}\r\n          sx={{\r\n            marginLeft: \"auto\",\r\n            backgroundColor: \"white\",\r\n            color: \"black\",\r\n            \"&:hover\": {\r\n              backgroundColor: \"#e3e2e2\",\r\n              color: \"black\",\r\n            },\r\n          }}\r\n        >\r\n          LogOut\r\n        </Button>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n","C:\\Projects\\Phonebook\\src\\components\\Form\\DrawerComp.js",[],[],"C:\\Projects\\Phonebook\\src\\components\\Form\\Navigation.js",[],[],"C:\\Projects\\Phonebook\\src\\components\\Form\\AuthNav.js",[],[],"C:\\Projects\\Phonebook\\src\\components\\redux\\contacts\\contacts-operations.js",[],[],{"ruleId":"143","severity":1,"message":"144","line":2,"column":10,"nodeType":"145","messageId":"146","endLine":2,"endColumn":18},{"ruleId":"143","severity":1,"message":"147","line":3,"column":8,"nodeType":"145","messageId":"146","endLine":3,"endColumn":12},{"ruleId":"143","severity":1,"message":"148","line":4,"column":8,"nodeType":"145","messageId":"146","endLine":4,"endColumn":19},{"ruleId":"143","severity":1,"message":"149","line":6,"column":8,"nodeType":"145","messageId":"146","endLine":6,"endColumn":14},{"ruleId":"150","severity":1,"message":"151","line":36,"column":6,"nodeType":"152","endLine":36,"endColumn":8,"suggestions":"153"},{"ruleId":"143","severity":1,"message":"154","line":3,"column":20,"nodeType":"145","messageId":"146","endLine":3,"endColumn":29},{"ruleId":"143","severity":1,"message":"155","line":4,"column":10,"nodeType":"145","messageId":"146","endLine":4,"endColumn":21},{"ruleId":"143","severity":1,"message":"156","line":1,"column":23,"nodeType":"145","messageId":"146","endLine":1,"endColumn":30},{"ruleId":"143","severity":1,"message":"154","line":1,"column":20,"nodeType":"145","messageId":"146","endLine":1,"endColumn":29},{"ruleId":"143","severity":1,"message":"157","line":26,"column":9,"nodeType":"145","messageId":"146","endLine":26,"endColumn":21},{"ruleId":"143","severity":1,"message":"158","line":1,"column":10,"nodeType":"145","messageId":"146","endLine":1,"endColumn":20},{"ruleId":"143","severity":1,"message":"159","line":2,"column":8,"nodeType":"145","messageId":"146","endLine":2,"endColumn":15},{"ruleId":"143","severity":1,"message":"160","line":4,"column":8,"nodeType":"145","messageId":"146","endLine":4,"endColumn":9},{"ruleId":"143","severity":1,"message":"161","line":5,"column":8,"nodeType":"145","messageId":"146","endLine":5,"endColumn":18},{"ruleId":"143","severity":1,"message":"162","line":30,"column":10,"nodeType":"145","messageId":"146","endLine":30,"endColumn":15},{"ruleId":"143","severity":1,"message":"163","line":30,"column":17,"nodeType":"145","messageId":"146","endLine":30,"endColumn":25},{"ruleId":"143","severity":1,"message":"160","line":4,"column":8,"nodeType":"145","messageId":"146","endLine":4,"endColumn":9},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Form' is defined but never used.","'ContactList' is defined but never used.","'Filter' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'token'. Either include them or remove the dependency array.","ArrayExpression",["164"],"'useEffect' is defined but never used.","'useSelector' is defined but never used.","'current' is defined but never used.","'handleChange' is assigned a value but never used.","'Typography' is defined but never used.","'AuthNav' is defined but never used.","'s' is defined but never used.","'Navigation' is defined but never used.","'value' is assigned a value but never used.","'setValue' is assigned a value but never used.",{"desc":"165","fix":"166"},"Update the dependencies array to be: [dispatch, token]",{"range":"167","text":"168"},[1606,1608],"[dispatch, token]"]