{"ast":null,"code":"import{useSelector}from'react-redux';import{Outlet,Navigate}from'react-router-dom';import authSelectors from'components/redux/auth/auth-selector';import{jsx as _jsx}from\"react/jsx-runtime\";export default function PublicRoute(_ref){var _ref$restricted=_ref.restricted,restricted=_ref$restricted===void 0?true:_ref$restricted;var isLoggedIn=useSelector(authSelectors.getIsLoggedIn);var shouldRedirect=isLoggedIn&&restricted;return!shouldRedirect?/*#__PURE__*/_jsx(Outlet,{}):/*#__PURE__*/_jsx(Navigate,{to:\"/contacts\"});}","map":{"version":3,"names":["useSelector","Outlet","Navigate","authSelectors","PublicRoute","restricted","isLoggedIn","getIsLoggedIn","shouldRedirect"],"sources":["C:/Projects/Phonebook/src/components/Form/PublicRoute.js"],"sourcesContent":["import { useSelector } from 'react-redux';\r\nimport { Outlet, Navigate } from 'react-router-dom';\r\nimport authSelectors from 'components/redux/auth/auth-selector';\r\n\r\nexport default function PublicRoute({ restricted = true }) {\r\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n  const shouldRedirect = isLoggedIn && restricted;\r\n  return !shouldRedirect ? <Outlet /> : <Navigate to=\"/contacts\" />;\r\n}\r\n"],"mappings":"AAAA,OAASA,WAAW,KAAQ,aAAa,CACzC,OAASC,MAAM,CAAEC,QAAQ,KAAQ,kBAAkB,CACnD,MAAOC,cAAa,KAAM,qCAAqC,CAAC,2CAEhE,cAAe,SAASC,YAAW,MAAwB,0BAArBC,UAAU,CAAVA,UAAU,0BAAG,IAAI,iBACrD,GAAMC,WAAU,CAAGN,WAAW,CAACG,aAAa,CAACI,aAAa,CAAC,CAC3D,GAAMC,eAAc,CAAGF,UAAU,EAAID,UAAU,CAC/C,MAAO,CAACG,cAAc,cAAG,KAAC,MAAM,IAAG,cAAG,KAAC,QAAQ,EAAC,EAAE,CAAC,WAAW,EAAG,CACnE"},"metadata":{},"sourceType":"module","externalDependencies":[]}