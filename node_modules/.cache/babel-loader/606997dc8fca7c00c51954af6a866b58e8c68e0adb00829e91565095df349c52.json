{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useDispatch, useSelector } from \"react-redux\";\nimport authSelectors from \"../redux/auth/auth-selector\";\nimport authOperation from \"../redux/auth/auth-operations\";\nimport s from \"./AppBar.module.css\";\nimport { Button, Typography, Grid } from \"@mui/material\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UserMenu(_ref) {\n  _s();\n  let {\n    isLarge,\n    isLoggedIn\n  } = _ref;\n  const dispatch = useDispatch();\n  const name = useSelector(authSelectors.getUserName);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: !isLarge && isLoggedIn ?\n    // <Grid item xs={3} sx={{ marginRight: 12 }}>\n    //   <Button\n    //     type=\"submit\"\n    //     variant=\"contained\"\n    //     onClick={() => dispatch(authOperation.logOut())}\n    //     sx={{\n    //       marginLeft: \"auto\",\n    //       backgroundColor: \"white\",\n    //       color: \"black\",\n    //       \"&:hover\": {\n    //         backgroundColor: \"#e3e2e2\",\n    //         color: \"black\",\n    //       },\n    //     }}\n    //   >\n    //     LogOut\n    //   </Button>\n    // </Grid>\n    1 : 2\n    // <Grid>\n    //   <Typography color=\"black\">Hello, {name}</Typography>\n    //   <Grid item xs={3} sx={{ marginRight: 12 }}>\n    //     <Button\n    //       type=\"submit\"\n    //       variant=\"contained\"\n    //       onClick={() => dispatch(authOperation.logOut())}\n    //       sx={{\n    //         marginLeft: \"auto\",\n    //         backgroundColor: \"white\",\n    //         color: \"black\",\n    //         \"&:hover\": {\n    //           backgroundColor: \"#e3e2e2\",\n    //           color: \"black\",\n    //         },\n    //       }}\n    //     >\n    //       LogOut\n    //     </Button>\n    //   </Grid>\n    // </Grid>\n  }, void 0, false);\n}\n_s(UserMenu, \"1uRDk7lzyRGZPaUmdgbuuOJzLBw=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = UserMenu;\nvar _c;\n$RefreshReg$(_c, \"UserMenu\");","map":{"version":3,"names":["useDispatch","useSelector","authSelectors","authOperation","s","Button","Typography","Grid","UserMenu","isLarge","isLoggedIn","dispatch","name","getUserName"],"sources":["C:/Projects/Phonebook/src/components/Form/UserMenu.js"],"sourcesContent":["import { useDispatch, useSelector } from \"react-redux\";\r\nimport authSelectors from \"../redux/auth/auth-selector\";\r\nimport authOperation from \"../redux/auth/auth-operations\";\r\nimport s from \"./AppBar.module.css\";\r\nimport { Button, Typography, Grid } from \"@mui/material\";\r\n\r\nexport default function UserMenu({ isLarge, isLoggedIn }) {\r\n  const dispatch = useDispatch();\r\n  const name = useSelector(authSelectors.getUserName);\r\n  return (\r\n    <>\r\n      {!isLarge && isLoggedIn\r\n        ? // <Grid item xs={3} sx={{ marginRight: 12 }}>\r\n          //   <Button\r\n          //     type=\"submit\"\r\n          //     variant=\"contained\"\r\n          //     onClick={() => dispatch(authOperation.logOut())}\r\n          //     sx={{\r\n          //       marginLeft: \"auto\",\r\n          //       backgroundColor: \"white\",\r\n          //       color: \"black\",\r\n          //       \"&:hover\": {\r\n          //         backgroundColor: \"#e3e2e2\",\r\n          //         color: \"black\",\r\n          //       },\r\n          //     }}\r\n          //   >\r\n          //     LogOut\r\n          //   </Button>\r\n          // </Grid>\r\n          1\r\n        : 2\r\n          // <Grid>\r\n          //   <Typography color=\"black\">Hello, {name}</Typography>\r\n          //   <Grid item xs={3} sx={{ marginRight: 12 }}>\r\n          //     <Button\r\n          //       type=\"submit\"\r\n          //       variant=\"contained\"\r\n          //       onClick={() => dispatch(authOperation.logOut())}\r\n          //       sx={{\r\n          //         marginLeft: \"auto\",\r\n          //         backgroundColor: \"white\",\r\n          //         color: \"black\",\r\n          //         \"&:hover\": {\r\n          //           backgroundColor: \"#e3e2e2\",\r\n          //           color: \"black\",\r\n          //         },\r\n          //       }}\r\n          //     >\r\n          //       LogOut\r\n          //     </Button>\r\n          //   </Grid>\r\n          // </Grid>\r\n      }\r\n    </>\r\n  );\r\n}\r\n"],"mappings":";AAAA,SAASA,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,OAAOC,aAAa,MAAM,6BAA6B;AACvD,OAAOC,aAAa,MAAM,+BAA+B;AACzD,OAAOC,CAAC,MAAM,qBAAqB;AACnC,SAASC,MAAM,EAAEC,UAAU,EAAEC,IAAI,QAAQ,eAAe;AAAC;AAAA;AAEzD,eAAe,SAASC,QAAQ,OAA0B;EAAA;EAAA,IAAzB;IAAEC,OAAO;IAAEC;EAAW,CAAC;EACtD,MAAMC,QAAQ,GAAGX,WAAW,EAAE;EAC9B,MAAMY,IAAI,GAAGX,WAAW,CAACC,aAAa,CAACW,WAAW,CAAC;EACnD,oBACE;IAAA,UACG,CAACJ,OAAO,IAAIC,UAAU;IACnB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,CAAC,GACD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EAAA,iBAEH;AAEP;AAAC,GAlDuBF,QAAQ;EAAA,QACbR,WAAW,EACfC,WAAW;AAAA;AAAA,KAFFO,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}