{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\Phonebook\\\\src\\\\components\\\\Form\\\\ContactsView\\\\Form.js\",\n  _s = $RefreshSig$();\nimport { TextField, Typography, Grid, Button } from \"@mui/material\";\nimport contactsOperatios from \"./components/redux/contacts/contacts-operations\";\nimport { useState, useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\n// import { RotatingLines } from 'react-loader-spinner';\nimport { useDispatch } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Form() {\n  _s();\n  const dispatch = useDispatch();\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n  const [newContacts, setNewContacts] = useState({});\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setNewContacts(prev => ({\n      ...prev,\n      [name]: value\n    }));\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n      case \"number\":\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    dispatch(contactsOperatios.addContact(newContacts));\n    reset();\n  };\n  const reset = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      sx: {\n        marginBottom: 5\n      },\n      align: \"center\",\n      variant: \"h5\",\n      children: \"You can add a new contact by filling out the form below\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        align: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          size: \"small\",\n          name: \"name\",\n          type: \"text\",\n          inputProps: {\n            pattern: \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          },\n          label: \"Name\",\n          id: \"name\",\n          onChange: handleChange,\n          value: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          name: \"number\",\n          type: \"number\",\n          size: \"small\",\n          inputProps: {\n            inputMode: \"numeric\",\n            pattern: \"+?d{1,4}?[-.s]?(?d{1,3}?)?[-.s]?d{1,4}[-.s]?d{1,4}[-.s]?d{1,9}\"\n          },\n          label: \"Number\",\n          id: \"number\",\n          onChange: handleChange,\n          value: number\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          sx: {\n            marginLeft: \"20px\",\n            backgroundColor: \"#e0e0bc\",\n            color: \"black\",\n            \"&:hover\": {\n              backgroundColor: \"#e3e2e2\",\n              color: \"black\"\n            }\n          },\n          children: \"Add contact\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(Form, \"hKahSjLJS94X1IERUzQqV7eGxck=\", false, function () {\n  return [useDispatch];\n});\n_c = Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["TextField","Typography","Grid","Button","contactsOperatios","useState","useEffect","useSelector","useDispatch","Form","dispatch","name","setName","number","setNumber","newContacts","setNewContacts","handleChange","event","value","target","prev","handleSubmit","preventDefault","addContact","reset","marginBottom","pattern","inputMode","marginLeft","backgroundColor","color"],"sources":["C:/Projects/Phonebook/src/components/Form/ContactsView/Form.js"],"sourcesContent":["import { TextField, Typography, Grid, Button } from \"@mui/material\";\r\nimport contactsOperatios from \"./components/redux/contacts/contacts-operations\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n// import { RotatingLines } from 'react-loader-spinner';\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nexport default function Form() {\r\n  const dispatch = useDispatch();\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n  const [newContacts, setNewContacts] = useState({});\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    setNewContacts((prev) => ({ ...prev, [name]: value }));\r\n\r\n    switch (name) {\r\n      case \"name\":\r\n        setName(value);\r\n        break;\r\n      case \"number\":\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    dispatch(contactsOperatios.addContact(newContacts));\r\n\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Typography sx={{ marginBottom: 5 }} align=\"center\" variant=\"h5\">\r\n        You can add a new contact by filling out the form below\r\n      </Typography>\r\n      <form onSubmit={handleSubmit}>\r\n        <Grid align=\"center\">\r\n          <TextField\r\n            size=\"small\"\r\n            name=\"name\"\r\n            type=\"text\"\r\n            inputProps={{\r\n              pattern: \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\",\r\n            }}\r\n            label=\"Name\"\r\n            id=\"name\"\r\n            onChange={handleChange}\r\n            value={name}\r\n          />\r\n          <TextField\r\n            name=\"number\"\r\n            type=\"number\"\r\n            size=\"small\"\r\n            inputProps={{\r\n              inputMode: \"numeric\",\r\n              pattern: \"+?d{1,4}?[-.s]?(?d{1,3}?)?[-.s]?d{1,4}[-.s]?d{1,4}[-.s]?d{1,9}\",\r\n            }}\r\n            label=\"Number\"\r\n            id=\"number\"\r\n            onChange={handleChange}\r\n            value={number}\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            sx={{\r\n              marginLeft: \"20px\",\r\n              backgroundColor: \"#e0e0bc\",\r\n              color: \"black\",\r\n              \"&:hover\": {\r\n                backgroundColor: \"#e3e2e2\",\r\n                color: \"black\",\r\n              },\r\n            }}\r\n          >\r\n            Add contact\r\n          </Button>\r\n        </Grid>\r\n        {/* {isLoading && (\r\n          <RotatingLines\r\n            height=\"30\"\r\n            width=\"30\"\r\n            radius=\"10\"\r\n            color=\"green\"\r\n            ariaLabel=\"three-dots-loading\"\r\n            wrapperStyle\r\n            wrapperClass\r\n          />\r\n        )} */}\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}