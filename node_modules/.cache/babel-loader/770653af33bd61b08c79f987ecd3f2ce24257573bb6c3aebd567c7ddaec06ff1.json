{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\Phonebook\\\\src\\\\components\\\\Form\\\\UserMenu.js\",\n  _s = $RefreshSig$();\nimport { useDispatch, useSelector } from \"react-redux\";\nimport authSelectors from \"../redux/auth/auth-selector\";\nimport authOperation from \"../redux/auth/auth-operations\";\nimport s from \"./AppBar.module.css\";\nimport { Button, Typography, Grid } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function UserMenu(_ref) {\n  _s();\n  let {\n    isLarge,\n    isLoggedIn\n  } = _ref;\n  const dispatch = useDispatch();\n  const name = useSelector(authSelectors.getUserName);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: !isLarge && isLoggedIn ? /*#__PURE__*/_jsxDEV(Grid, {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 3,\n        sx: {\n          marginRight: 12\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          onClick: () => dispatch(authOperation.logOut()),\n          sx: {\n            marginLeft: \"auto\",\n            backgroundColor: \"white\",\n            color: \"black\",\n            \"&:hover\": {\n              backgroundColor: \"#e3e2e2\",\n              color: \"black\"\n            }\n          },\n          children: \"LogOut\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n      sx: {\n        display: \"flex\",\n        placeItems: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        color: \"#\",\n        sx: {\n          marginRight: 5\n        },\n        children: [\"Hello, \", name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 3,\n        sx: {\n          marginRight: 12\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          onClick: () => dispatch(authOperation.logOut()),\n          sx: {\n            marginLeft: \"auto\",\n            backgroundColor: \"white\",\n            color: \"black\",\n            \"&:hover\": {\n              backgroundColor: \"#e3e2e2\",\n              color: \"black\"\n            }\n          },\n          children: \"LogOut\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(UserMenu, \"1uRDk7lzyRGZPaUmdgbuuOJzLBw=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = UserMenu;\nvar _c;\n$RefreshReg$(_c, \"UserMenu\");","map":{"version":3,"names":["useDispatch","useSelector","authSelectors","authOperation","s","Button","Typography","Grid","UserMenu","isLarge","isLoggedIn","dispatch","name","getUserName","marginRight","logOut","marginLeft","backgroundColor","color","display","placeItems"],"sources":["C:/Projects/Phonebook/src/components/Form/UserMenu.js"],"sourcesContent":["import { useDispatch, useSelector } from \"react-redux\";\r\nimport authSelectors from \"../redux/auth/auth-selector\";\r\nimport authOperation from \"../redux/auth/auth-operations\";\r\nimport s from \"./AppBar.module.css\";\r\nimport { Button, Typography, Grid } from \"@mui/material\";\r\n\r\nexport default function UserMenu({ isLarge, isLoggedIn }) {\r\n  const dispatch = useDispatch();\r\n  const name = useSelector(authSelectors.getUserName);\r\n  return (\r\n    <>\r\n      {!isLarge && isLoggedIn ? (\r\n        <Grid>\r\n          <Grid item xs={3} sx={{ marginRight: 12 }}>\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              onClick={() => dispatch(authOperation.logOut())}\r\n              sx={{\r\n                marginLeft: \"auto\",\r\n                backgroundColor: \"white\",\r\n                color: \"black\",\r\n                \"&:hover\": {\r\n                  backgroundColor: \"#e3e2e2\",\r\n                  color: \"black\",\r\n                },\r\n              }}\r\n            >\r\n              LogOut\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      ) : (\r\n        <Grid sx={{ display: \"flex\", placeItems: \"center\" }}>\r\n          <Typography color=\"#\" sx={{ marginRight: 5 }}>\r\n            Hello, {name}\r\n          </Typography>\r\n          <Grid item xs={3} sx={{ marginRight: 12 }}>\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              onClick={() => dispatch(authOperation.logOut())}\r\n              sx={{\r\n                marginLeft: \"auto\",\r\n                backgroundColor: \"white\",\r\n                color: \"black\",\r\n                \"&:hover\": {\r\n                  backgroundColor: \"#e3e2e2\",\r\n                  color: \"black\",\r\n                },\r\n              }}\r\n            >\r\n              LogOut\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,SAASA,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,OAAOC,aAAa,MAAM,6BAA6B;AACvD,OAAOC,aAAa,MAAM,+BAA+B;AACzD,OAAOC,CAAC,MAAM,qBAAqB;AACnC,SAASC,MAAM,EAAEC,UAAU,EAAEC,IAAI,QAAQ,eAAe;AAAC;AAAA;AAEzD,eAAe,SAASC,QAAQ,OAA0B;EAAA;EAAA,IAAzB;IAAEC,OAAO;IAAEC;EAAW,CAAC;EACtD,MAAMC,QAAQ,GAAGX,WAAW,EAAE;EAC9B,MAAMY,IAAI,GAAGX,WAAW,CAACC,aAAa,CAACW,WAAW,CAAC;EACnD,oBACE;IAAA,UACG,CAACJ,OAAO,IAAIC,UAAU,gBACrB,QAAC,IAAI;MAAA,uBACH,QAAC,IAAI;QAAC,IAAI;QAAC,EAAE,EAAE,CAAE;QAAC,EAAE,EAAE;UAAEI,WAAW,EAAE;QAAG,CAAE;QAAA,uBACxC,QAAC,MAAM;UACL,IAAI,EAAC,QAAQ;UACb,OAAO,EAAC,WAAW;UACnB,OAAO,EAAE,MAAMH,QAAQ,CAACR,aAAa,CAACY,MAAM,EAAE,CAAE;UAChD,EAAE,EAAE;YACFC,UAAU,EAAE,MAAM;YAClBC,eAAe,EAAE,OAAO;YACxBC,KAAK,EAAE,OAAO;YACd,SAAS,EAAE;cACTD,eAAe,EAAE,SAAS;cAC1BC,KAAK,EAAE;YACT;UACF,CAAE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAGK;QAAA;QAAA;QAAA;MAAA;IACJ;MAAA;MAAA;MAAA;IAAA,QACF,gBAEP,QAAC,IAAI;MAAC,EAAE,EAAE;QAAEC,OAAO,EAAE,MAAM;QAAEC,UAAU,EAAE;MAAS,CAAE;MAAA,wBAClD,QAAC,UAAU;QAAC,KAAK,EAAC,GAAG;QAAC,EAAE,EAAE;UAAEN,WAAW,EAAE;QAAE,CAAE;QAAA,sBACnCF,IAAI;MAAA;QAAA;QAAA;QAAA;MAAA,QACD,eACb,QAAC,IAAI;QAAC,IAAI;QAAC,EAAE,EAAE,CAAE;QAAC,EAAE,EAAE;UAAEE,WAAW,EAAE;QAAG,CAAE;QAAA,uBACxC,QAAC,MAAM;UACL,IAAI,EAAC,QAAQ;UACb,OAAO,EAAC,WAAW;UACnB,OAAO,EAAE,MAAMH,QAAQ,CAACR,aAAa,CAACY,MAAM,EAAE,CAAE;UAChD,EAAE,EAAE;YACFC,UAAU,EAAE,MAAM;YAClBC,eAAe,EAAE,OAAO;YACxBC,KAAK,EAAE,OAAO;YACd,SAAS,EAAE;cACTD,eAAe,EAAE,SAAS;cAC1BC,KAAK,EAAE;YACT;UACF,CAAE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAGK;QAAA;QAAA;QAAA;MAAA,QACJ;IAAA;MAAA;MAAA;MAAA;IAAA;EAEV,iBACA;AAEP;AAAC,GArDuBV,QAAQ;EAAA,QACbR,WAAW,EACfC,WAAW;AAAA;AAAA,KAFFO,QAAQ;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}